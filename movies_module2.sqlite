#accessing all the columns in the table movies
SELECT * FROM movies;

#accessing only 2 rows name and genre
SELECT name,genre FROM movies;

#using AS to rename the column while showing the result of a query
SELECT name AS 'Titles' FROM movies;

#using the keyword DISTINCT to get the unique values
SELECT DISTINCT genre FROM movies;

#using the keyword WHERE to filter the results
SELECT * FROM movies WHERE year>2014;

#using LIKE with a missing character
SELECT * FROM movies WHERE name LIKE 'Se_en';

#using LIKE with '%' wildcard
SELECT * FROM movies WHERE name LIKE 'The %';

#accessing all the movie names which have NULL value in imdb_rating column
SELECT name FROM movies WHERE imdb_rating IS NULL;

#using BETWEEN to get information of all the movies with name starting with 'D','E' and 'F'
SELECT * FROM movies WHERE name BETWEEN 'D' and 'G';

# information of all the movies which released in 1970s
SELECT * FROM movies WHERE year BETWEEN 1970 AND 1979;

#using AND to give multiple conditions
SELECT * FROM movies WHERE genre='horror' AND year<1985;

#using OR to satisfy one of the multiple conditions
SELECT * FROM movies WHERE year>2014 OR genre='action';

#using ORDER BY to give sorted result of the query from lowest to highest rating
SELECT name, year , imdb_rating FROM movies ORDER BY imdb_rating;

#using ORDER BY to give sorted result of the query from highest to lowest rating
SELECT name, year , imdb_rating FROM movies ORDER BY imdb_rating DESC;

#LIMIT to give limited number of rows in the result
SELECT * FROM movies ORDER BY imdb_rating DESC LIMIT 3;
